-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

ALTER TABLE IF EXISTS public.routes
    DISABLE ROW LEVEL SECURITY;

ALTER TABLE IF EXISTS public.routes DROP COLUMN IF EXISTS judge_id;

ALTER TABLE public.routes
    ALTER COLUMN id TYPE uuid;

ALTER TABLE IF EXISTS public.routes
    ALTER COLUMN id DROP IDENTITY;

ALTER TABLE IF EXISTS public.routes
    RENAME id TO round_id;

ALTER TABLE public.routes
    ALTER COLUMN round_id TYPE uuid;

ALTER TABLE IF EXISTS public.routes
    ALTER COLUMN round_id DROP IDENTITY;
ALTER TABLE IF EXISTS public.routes DROP CONSTRAINT IF EXISTS routes_judge_id_fkey;

DROP POLICY IF EXISTS "Enable read access for all users" ON public.routes;

ALTER TABLE IF EXISTS public.attempts
    DISABLE ROW LEVEL SECURITY;

ALTER TABLE public.attempts
    ALTER COLUMN id TYPE uuid;

ALTER TABLE IF EXISTS public.attempts
    ALTER COLUMN id DROP IDENTITY;

ALTER TABLE IF EXISTS public.attempts
    RENAME id TO competitor_id;

ALTER TABLE public.attempts
    ALTER COLUMN competitor_id TYPE uuid;

ALTER TABLE IF EXISTS public.attempts
    ALTER COLUMN competitor_id DROP IDENTITY;

ALTER TABLE IF EXISTS public.attempts
    RENAME id TO route_id;

ALTER TABLE public.attempts
    ALTER COLUMN route_id TYPE uuid;

ALTER TABLE IF EXISTS public.attempts
    ALTER COLUMN route_id DROP IDENTITY;

ALTER TABLE IF EXISTS public.attempts
    RENAME id TO hold;

ALTER TABLE public.attempts
    ALTER COLUMN hold TYPE numeric;
ALTER TABLE IF EXISTS public.attempts
    ALTER COLUMN hold DROP NOT NULL;

ALTER TABLE IF EXISTS public.attempts
    ALTER COLUMN hold DROP IDENTITY;

ALTER TABLE IF EXISTS public.attempts
    ALTER COLUMN hold SET STORAGE MAIN;

DROP POLICY IF EXISTS "Enable edit access for authenticated users" ON public.attempts;

ALTER TABLE IF EXISTS public.divisions
    DISABLE ROW LEVEL SECURITY;

REVOKE ALL ON TABLE public.divisions FROM anon;
REVOKE ALL ON TABLE public.divisions FROM authenticated;
REVOKE ALL ON TABLE public.divisions FROM postgres;
REVOKE ALL ON TABLE public.divisions FROM service_role;
REVOKE ALL ON TABLE public.divisions FROM supabase_admin;
GRANT ALL ON TABLE public.divisions TO anon;

GRANT ALL ON TABLE public.divisions TO postgres;

GRANT ALL ON TABLE public.divisions TO supabase_admin;

GRANT ALL ON TABLE public.divisions TO authenticated;

GRANT ALL ON TABLE public.divisions TO service_role;

ALTER TABLE public.divisions
    ALTER COLUMN id TYPE uuid;

ALTER TABLE IF EXISTS public.divisions
    ALTER COLUMN id DROP IDENTITY;

ALTER TABLE IF EXISTS public.divisions
    RENAME id TO comp_id;

ALTER TABLE public.divisions
    ALTER COLUMN comp_id TYPE uuid;

ALTER TABLE IF EXISTS public.divisions
    ALTER COLUMN comp_id DROP IDENTITY;

DROP POLICY IF EXISTS "Enable read access for all users" ON public.divisions;

ALTER TABLE IF EXISTS public.rounds
    DISABLE ROW LEVEL SECURITY;

REVOKE ALL ON TABLE public.rounds FROM anon;
REVOKE ALL ON TABLE public.rounds FROM authenticated;
REVOKE ALL ON TABLE public.rounds FROM postgres;
REVOKE ALL ON TABLE public.rounds FROM service_role;
REVOKE ALL ON TABLE public.rounds FROM supabase_admin;
GRANT ALL ON TABLE public.rounds TO anon;

GRANT ALL ON TABLE public.rounds TO postgres;

GRANT ALL ON TABLE public.rounds TO supabase_admin;

GRANT ALL ON TABLE public.rounds TO authenticated;

GRANT ALL ON TABLE public.rounds TO service_role;

ALTER TABLE public.rounds
    ALTER COLUMN id TYPE uuid;

ALTER TABLE IF EXISTS public.rounds
    ALTER COLUMN id DROP IDENTITY;

ALTER TABLE IF EXISTS public.rounds
    RENAME id TO comp_id;

ALTER TABLE public.rounds
    ALTER COLUMN comp_id TYPE uuid;

ALTER TABLE IF EXISTS public.rounds
    ALTER COLUMN comp_id DROP IDENTITY;

DROP POLICY IF EXISTS "Enable read access for all users" ON public.rounds;

ALTER TABLE IF EXISTS public.competitors
    DISABLE ROW LEVEL SECURITY;

ALTER TABLE public.competitors
    ALTER COLUMN id TYPE uuid;

ALTER TABLE IF EXISTS public.competitors
    ALTER COLUMN id DROP IDENTITY;

ALTER TABLE IF EXISTS public.competitors
    RENAME id TO division_id;

ALTER TABLE public.competitors
    ALTER COLUMN division_id TYPE uuid;

ALTER TABLE IF EXISTS public.competitors
    ALTER COLUMN division_id DROP IDENTITY;

DROP POLICY IF EXISTS "Enable read access for all users" ON public.competitors;

ALTER TABLE IF EXISTS public.comps
    DISABLE ROW LEVEL SECURITY;

REVOKE ALL ON TABLE public.comps FROM anon;
REVOKE ALL ON TABLE public.comps FROM authenticated;
REVOKE ALL ON TABLE public.comps FROM postgres;
REVOKE ALL ON TABLE public.comps FROM service_role;
REVOKE ALL ON TABLE public.comps FROM supabase_admin;
GRANT ALL ON TABLE public.comps TO anon;

GRANT ALL ON TABLE public.comps TO postgres;

GRANT ALL ON TABLE public.comps TO supabase_admin;

GRANT ALL ON TABLE public.comps TO authenticated;

GRANT ALL ON TABLE public.comps TO service_role;

ALTER TABLE public.comps
    ALTER COLUMN id TYPE uuid;

ALTER TABLE IF EXISTS public.comps
    ALTER COLUMN id DROP IDENTITY;

DROP POLICY IF EXISTS "Enable read access for all users" ON public.comps;
